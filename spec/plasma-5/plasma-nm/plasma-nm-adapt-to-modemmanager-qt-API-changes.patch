diff --git a/libs/models/networkmodel.cpp b/libs/models/networkmodel.cpp
index b15181b..2258f1f 100644
--- a/libs/models/networkmodel.cpp
+++ b/libs/models/networkmodel.cpp
@@ -246,10 +246,10 @@ void NetworkModel::initializeSignals(const NetworkManager::Device::Ptr& device)
             if (modem->hasInterface(ModemManager::ModemDevice::ModemInterface)) {
                 ModemManager::Modem::Ptr modemNetwork = modem->interface(ModemManager::ModemDevice::ModemInterface).objectCast<ModemManager::Modem>();
                 if (modemNetwork) {
-                    connect(modemNetwork.data(), SIGNAL(signalQualityChanged(uint)),
-                            SLOT(gsmNetworkSignalQualityChanged(uint)), Qt::UniqueConnection);
-                    connect(modemNetwork.data(), SIGNAL(accessTechnologyChanged(ModemManager::Modem::AccessTechnologies)),
-                            SLOT(gsmNetworkAccessTechnologyChanged(ModemManager::Modem::AccessTechnologies)), Qt::UniqueConnection);
+                    connect(modemNetwork.data(), SIGNAL(signalQualityChanged(ModemManager::SignalQualityPair)),
+                            SLOT(gsmNetworkSignalQualityChanged(ModemManager::SignalQualityPair)), Qt::UniqueConnection);
+                    connect(modemNetwork.data(), SIGNAL(accessTechnologiesChanged(QFlags<MMModemAccessTechnology>)),
+                            SLOT(gsmNetworkAccessTechnologiesChanged(QFlags<MMModemAccessTechnology>)), Qt::UniqueConnection);
                     connect(modemNetwork.data(), SIGNAL(currentModesChanged()),
                             SLOT(gsmNetworkCurrentModesChanged()), Qt::UniqueConnection);
                 }
@@ -854,9 +854,9 @@ void NetworkModel::deviceStateChanged(NetworkManager::Device::State state, Netwo
 }
 
 #if WITH_MODEMMANAGER_SUPPORT
-void NetworkModel::gsmNetworkAccessTechnologyChanged(ModemManager::Modem::AccessTechnologies technology)
+void NetworkModel::gsmNetworkAccessTechnologiesChanged(QFlags<MMModemAccessTechnology> accessTechnologies)
 {
-    Q_UNUSED(technology);
+    Q_UNUSED(accessTechnologies);
     ModemManager::Modem * gsmNetwork = qobject_cast<ModemManager::Modem*>(sender());
     if (gsmNetwork) {
         Q_FOREACH(const NetworkManager::Device::Ptr & dev, NetworkManager::networkInterfaces()) {
@@ -900,7 +900,7 @@ void NetworkModel::gsmNetworkCurrentModesChanged()
     }
 }
 
-void NetworkModel::gsmNetworkSignalQualityChanged(uint signal)
+void NetworkModel::gsmNetworkSignalQualityChanged(const ModemManager::SignalQualityPair &signalQuality)
 {
     ModemManager::Modem * gsmNetwork = qobject_cast<ModemManager::Modem*>(sender());
     if (gsmNetwork) {
@@ -912,7 +912,7 @@ void NetworkModel::gsmNetworkSignalQualityChanged(uint signal)
                         ModemManager::Modem::Ptr modemNetwork = modem->interface(ModemManager::ModemDevice::ModemInterface).objectCast<ModemManager::Modem>();
                         if (modemNetwork && modemNetwork->device() == gsmNetwork->device()) {
                             Q_FOREACH(NetworkModelItem * item, m_list.returnItems(NetworkItemsList::Device, dev->uni())) {
-                                item->setSignal(signal);
+                                item->setSignal(signalQuality.signal);
                                 updateItem(item);
                             }
                         }
diff --git a/libs/models/networkmodel.h b/libs/models/networkmodel.h
index bb83a95..acb520d 100644
--- a/libs/models/networkmodel.h
+++ b/libs/models/networkmodel.h
@@ -95,9 +95,9 @@ private Q_SLOTS:
     void deviceRemoved(const QString& device);
     void deviceStateChanged(NetworkManager::Device::State state, NetworkManager::Device::State oldState, NetworkManager::Device::StateChangeReason reason);
 #if WITH_MODEMMANAGER_SUPPORT
-    void gsmNetworkAccessTechnologyChanged(ModemManager::Modem::AccessTechnologies technology);
+    void gsmNetworkAccessTechnologiesChanged(QFlags<MMModemAccessTechnology> accessTechnologies);
     void gsmNetworkCurrentModesChanged();
-    void gsmNetworkSignalQualityChanged(uint signal);
+    void gsmNetworkSignalQualityChanged(const ModemManager::SignalQualityPair &signalQuality);
 #endif
     void ipConfigChanged();
     void ipInterfaceChanged();
